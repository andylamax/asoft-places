buildscript {
    ext {
        ktor_version = "1.1.1"
        kotlin_version = "1.3.20-eap-52"
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.44"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'kotlin2js' version '1.3.20-eap-52'
}

apply plugin: "kotlin-dce-js"
apply plugin: "kotlinx-serialization"
apply plugin: "org.jetbrains.kotlin.frontend"

group 'com.asofttz'
version '0.0.0'

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-js-wrappers' }
    maven { url 'https://dl.bintray.com/kotlinx/kotlinx' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"

    api project(":asoft-theme")
    api project(":asoft-rx")
    api project(":asoft-persist")

    api project(":asoft-module")
    api project(":asoft-framework")

    api project(":asoft-ui")
    api project(":asoft-places:asoft-places-lib")

    api project(":asoft-logging:asoft-logging-lib")
    api project(":self-logging:self-logging-react")

    api project(":asoft-auth:asoft-auth-lib")
    api project(":asoft-auth:asoft-auth-react")

    implementation "org.jetbrains:kotlin-react:16.6.0-pre.66-kotlin-1.3.11"
    implementation "org.jetbrains:kotlin-react-dom:16.6.0-pre.66-kotlin-1.3.11"
    implementation "org.jetbrains:kotlin-styled:1.0.0-pre.66-kotlin-1.3.11"
    implementation "org.jetbrains:kotlin-react-router-dom:4.3.1-pre.66-kotlin-1.3.11"

    implementation "io.ktor:ktor-client-js:$ktor_version"
    implementation "io.ktor:ktor-client-auth:$ktor_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.9.1"

    testImplementation "org.jetbrains.kotlin:kotlin-test-js"
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}

kotlinFrontend {
    npm {
        dependency("react")
        dependency("react-dom")
        dependency("styled-components")
        dependency("inline-style-prefixer")
        dependency("react-router-dom")
        dependency("text-encoding")

        dependency("echarts")
        dependency("react-icons")
        dependency("react-c3js")
        dependency("echarts-for-react")
        
        devDependency("file-loader")
        devDependency("style-loader")
        devDependency("css-loader")
        devDependency("less")
        devDependency("less-loader")
        devDependency("babel-loader", "8")

        //
        devDependency("@babel/core")
        devDependency("@babel/preset-env")
        devDependency("@babel/preset-react")
    }

    webpackBundle {
        bundleName = project.name
        host = "0.0.0.0"
        contentPath = file("$buildDir.path/resources/main")
    }
}

bundle.doLast {
    copy {
        from "$buildDir.path/bundle/${project.name}.bundle.js"
        to "$buildDir.path/resources/main"
    }
}